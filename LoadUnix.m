%%% =======================================================================
%%  Purpose:
%       This function loads data on Unix systems for SlugPen.
%%  Last edit:
%       07/19/2023 - Kristin Dickerson, UCSC
%%% =======================================================================

function [Parameters, ...
          dataloaded,...
          parsedtiming,...
          HSTART,...
          RPT] ...
                = LoadUnix(figure_Main, ...
                    NoTherm, ...
                    f)

%% Initialize
     
     % Get file name
     [~,fn,~]=fileparts(f);
        
%% Scan using UNIX awk
                    
           % Delete temp file
           if exist('RawData.tmp','file')
               delete('RawData.tmp');
           end
           
           % Grab all lines with length > 80 (Data)
           eval(['!awk ''length > 80'' ',f,' > RawData.tmp'])
           % Grab all Acomms Report lines
           eval(['!awk ''/RPT/'' ',f,' > ',fn,'_HReport.dat'])
           % Grab all Heat Pulse Report lines
           eval(['!awk ''/HSTART/'' ',f,' > ',fn,'_HPulse.dat'])
           
           % Prep textscan for variable number of thermistors
           n  = repmat('%n ',1,NoTherm); %Thermistors
           s       = repmat('%s ',1,11);     % Time, Acc, depth
           fid = fopen('RawData.tmp','r');
           C   = textscan(fid,[s n]);
           fclose(fid);
      
           % Initialize Matrix AllTdata (All Temperature Data)
           l    = length(C{1});
           Traw = NaN*zeros(NoTherm+1,l);
      
           % Assign parameters
           ymd    = str2num(char(strrep(C{3},'-',' '))); %#ok<*ST2NM>
           hms    = str2num(char(strrep(C{4},':',' ')));
           accx   = str2num(char(strrep(C{6},'X','')));
           accy   = str2num(char(strrep(C{7},'Y','')));
           accz   = str2num(char(strrep(C{8},'Z','')));
           pwr    = str2num(char(strrep(C{9},'V','')));
           z      = str2num(char(strrep(C{10},'D','')));
      
           for i=1:NoTherm
               foo = C{11+i}';
               Traw(i,1:length(foo))=foo;
           end
      
           % Restructure Traw with T1 in row 1, incrementing to Twater
           Traw(NoTherm+1,:)=Traw(1,:);
           Traw=Traw(2:end,:);

           % Save data in structure for access
            dataloaded = struct('YMD',ymd,'HMS', hms,'ACCx', accx,...
           'ACCy',accy,'ACCz',accz,'PWR',pwr,'Z',z, 'TRAW',Traw);
     
       %% Error if number of temperature measurements ~= time
       if length(Traw)~=length(hms)
           errorstr='Timing Error';
               dlgname = 'Timing Error';
           uiconfirm(figure_Main, errorstr, dlgname, ...
               'Options', {'OK','Cancel'});
           return
       end  
       
       %% Parse Timing
       yr    = ymd(:,1);
       mo    = ymd(:,2);
       dy    = ymd(:,3);
       hr    = hms(:,1);
       mn    = hms(:,2);
       sc    = hms(:,3);

       % Save data in structure for access
       parsedtiming = struct('YR',yr,'MO', mo,'DY', dy,...
               'HR',hr,'MN',mn,'SC',sc);

       %% Read in heat pulse and report data
       HSTART = {};
       fid = fopen([fn,'_HPulse.dat'],'r');
       i=1;
       while i>0
           line = fgetl(fid);
           if line == -1
               fclose(fid);
               break
           else
               HSTART{i}=strtrim(line); %#ok<AGROW>
               i=i+1;
           end
       end
       RPT = {};
       fid = fopen([fn,'_HReport.dat'],'r');
       i=1;
       while i>0
           line = fgetl(fid);
           if line==-1
               fclose(fid);
               break
           else
               RPT{i}=strtrim(line); %#ok<AGROW>
               i=i+1;
           end
       end

       %% Read in Header and Assign Parameters
       fid=fopen(f,'r');
       
       % Discard Description and first parameter line (no longer used)
       fgetl(fid); fgetl(fid);
      
       % Remaining Header Lines
       headerlines = 11;
       Params=cell(1,headerlines);
       ParamsVals=zeros(1,headerlines);
       for i=1:headerlines
           line = strtrim(fgetl(fid));
           a    = find(isspace(line)==1);
           Params{1,i}     = strtrim(line(1:a(end)));
           ParamsVals(1,i) = str2num(line(a(end):end));
       end
       fclose(fid);
       % Store Header in Structure PARAMETERS
       Parameters = struct('Field',{Params},'Value',ParamsVals);

       %% Remove Temporary Files Generated by AWK
       if exist('RawData.tmp','file')
           delete('RawData.tmp');
       end

       %% Move DAT files to subfolder
       movefile *.dat outputs


       
                